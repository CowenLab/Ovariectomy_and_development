geom_point(position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.9),shape=21, size= 1.5, alpha = 0.8) +
scale_fill_manual(values = c('white', 'white'))+
facet_wrap(~Age.months.)  +
theme(legend.position="none")+
ggtitle('All Trails (trial treated as the subj.)')
ggplot(MWM) + aes( x = day_cat, y= CIPL_Scores, fill = Strain, color=Strain) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = .8, size = 2.5,position = position_dodge(width=0.9)) +
scale_fill_manual(values = custom_colors) + scale_color_manual(values = custom_colors)  +
geom_dotplot(position = position_dodge(width=0.9),
binaxis='y',
stackdir='center',
dotsize = .5) +
scale_fill_manual(values = c('white', 'white'))+
facet_wrap(~Age.months.)  +
theme(legend.position="none")+
ggtitle('All Trails (trial treated as the subj.)')
ggplot(MWM, aes( x = day_cat, y= CIPL_Scores , fill =  Strain, colour = Strain)) + geom_boxplot(position = position_dodge(width = 0.9)) +
scale_fill_manual(values = custom_colors) +
geom_point(position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.9), size = 1.8, alpha = 0.8 ) +
facet_wrap(~Age.months.) + scale_color_manual(values = c(marker_color, marker_color)) +
ggtitle('All Trails (trial treated as the subj.)')
ggplot(MWM, aes( x = day_cat, y= goal.crossings , fill =  Strain, colour = Strain)) + geom_boxplot(position = position_dodge(width = 0.9)) +
geom_point(position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.9), size = 1.8, alpha = .7 ) +
facet_wrap(~Age.months.) + scale_fill_manual(values = custom_colors) + scale_color_manual(values = c(marker_color, marker_color)) +
ggtitle('All Trails (trial treated as the subj.)')
ggplot(subset(MWM,trial_num ==1), aes( x = day_cat, y= CIPL_Scores , fill =  Strain, colour = Strain)) + geom_boxplot(position = position_dodge(width = 0.9)) +
geom_point(position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.9), size = 1.8, alpha = .7 ) +
facet_wrap(~Age.months.) + scale_fill_manual(values = custom_colors) + scale_color_manual(values = c(marker_color, marker_color)) +
ggtitle('Trial 1 only (trial treated as the subj.)')
ggplot(MWM, aes( x = day_cat, y= latency.to.goal , fill =  Strain, colour = Strain)) + geom_boxplot(position = position_dodge(width = 0.9)) +
geom_point(position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.9), size = 1.8, alpha = .7 ) +
facet_wrap(~Age.months.) + scale_fill_manual(values = custom_colors) + scale_color_manual(values = c(marker_color, marker_color)) +
ggtitle('All Trails (trial treated as the subj.)')
# Acquisition = days 1-4, Reversal = days 5 and 6
#Main Table Setup. Goal is to group by day.
# This really does nothing right now other than alter variable names. for simplicity we should just stick with MWM.
#MWM_DAY <- MWM %>% group_by(Strain, animalID, Age.months., day_cat, Trial, time.in.s.quadrant, time.in.n.quadrant, time.in.w.quadrant, time.in.e.quadrant) %>% summarize(mn_thig = mean(is_thigmotaxis), mn_circ = mean(is_circling) , mn_rnd = mean(is_random_path) , mn_scan = mean(is_scanning) , mn_chain = mean(is_chaining) , mn_direct = mean(is_directed_search) , mn_cor_path = mean(is_corrected_path ), mn_dir_path = mean(is_direct_path), mn_persev = mean(is_perseverance), mn_CIPL = mean(CIPL_Scores))
# Do we want to just average across all trils in a day or just for the last few trials?
#NOTE: GraphTable01b <- MWM %>% group_by(Strain, animalID, Age.months., day_cat, Trial, Time_In_ASouthGoal_Quadrant, Time_In_RNorthGoal_Quadrant, Time_In_West_Quadrant, Time_In_East_Quadrant)
#titstr = 'alltrials'
#TMP <- subset(MWM,trial_num < 7) # do this if you only want to compute performance based on the last trials. Ignore the few trial 7 as these are probe trials.
titstr = 'days1to4 alltrials'
TMP <- subset(MWM,trial_num < 7 & X_Day < 5) # do this if you only want to compute performance based on the last trials. Ignore the few trial 7 as these are probe trials.
#titstr = 'trials56'
#TMP <- subset(MWM, trial_num > 4 & trial_num < 7) # do this if you only want to compute performance based on the last trials. Ignore the few trial 7 as these are probe trials.
#titstr = 'trials12'
#TMP <- subset(MWM, trial_num < 3)  # do this if you only want to compute performance based on the first 2 trials.
#titstr = 'trial 1'
#TMP <- subset(MWM, trial_num == 1)  # do this if you only want to compute performance based on the first 2 trials.
#titstr = 'trial7' # This is for analyzing the probe trial only.
#TMP <- subset(MWM, trial_num == 7)  # do this if you only want to compute performance based on the first 2 trials.
group_MWM_by_day <- function(TBL){
MWM_DAY <- TBL %>% group_by(animalID, Age.months., day_cat, Strain) %>%
summarize(mn_thig = mean(is_thigmotaxis), mn_circ = mean(is_circling) , mn_rnd = mean(is_random_path) ,
mn_scan = mean(is_scanning) , mn_chain = mean(is_chaining) , mn_direct = mean(is_directed_search) ,
mn_cor_path = mean(is_corrected_path ), mn_dir_path = mean(is_direct_path), mn_persev = mean(is_perseverance),
mn_thig_c = mean(thig_conf), mn_circ_c = mean(circ_conf) , mn_rnd_c = mean(rand_conf) ,
mn_scan_c = mean(scan_conf) , mn_chain_c = mean(chain_conf) , mn_direct_c = mean(dir_search_conf) ,
mn_cor_path_c = mean(correc_conf ), mn_dir_path_c = mean(dir_path_conf), mn_persev_c = mean(persev_conf),
mn_allocentric_conf  = mean(allocentric_conf ), mn_escape_conf  = mean(escape_conf ),
mn_CIPL = mean(CIPL_Scores), mn_allocentric = mean(is_allocentric), sum_allocentric = sum(is_allocentric), mn_escape = mean(is_escape),
mn_TIE =  mean(time.in.e.quadrant.norm), mn_TIW = mean(time.in.w.quadrant.norm),mn_TIN = mean(time.in.n.quadrant.norm),
mn_TIS = mean(time.in.s.quadrant.norm), mn_TIG = mean(time.in.goal.zone.norm),mn_TSmN = mean(time.in.s.minus.n.norm), mn_latency = mean(latency.to.goal),
sm_goal_cross = sum(goal.crossings), mn_goal_cross = mean(goal.crossings), mn_entropy = mean(entropy_strat) )
MWM_DAY$animalID <- factor(MWM_DAY$animalID) # gets rid of empty factors
MWM_DAY$day_cat <- factor(MWM_DAY$day_cat) # gets rid of empty factors
MWM_DAY$Strain <- factor(MWM_DAY$Strain) # gets rid of empty factors
MWM_DAY
}
MWM_DAY1to6_allT <- group_MWM_by_day(subset(MWM,trial_num < 7 & X_Day < 7)) # titstr = 'days1to4 alltrials'
MWM_DAY1to4_allT <- group_MWM_by_day(subset(MWM,trial_num < 7 & X_Day < 5)) # titstr = 'days1to4 alltrials'
MWM_DAY1to4_T12 <- group_MWM_by_day(subset(MWM,trial_num < 3 & X_Day < 5)) # titstr = 'days1to4 alltrials'
MWM_DAY1to4_T56 <- group_MWM_by_day(subset(MWM,trial_num > 4 & trial_num < 7 & X_Day < 5)) # titstr = 'days1to4 alltrials'
MWM_DAY4_Probe <- group_MWM_by_day(subset(MWM, Probe == TRUE & day_cat == 4 & trial_num == 7))
MWM_DAY6_Probe <- group_MWM_by_day(subset(MWM, Probe == TRUE & day_cat == 6 & trial_num == 7))
MWM_DAY56_allT <- group_MWM_by_day(subset(MWM,trial_num < 7 & X_Day > 4 & X_Day < 7 ))
MWM_DAY_COMBINE_MICE <- subset(MWM,trial_num < 7 & X_Day < 5) %>% group_by( Age.months., day_cat, Strain) %>%
summarize( sum_allocentric = sum(is_allocentric), sum_escape = sum(is_escape))
MWM_DAY_COMBINE_MICE_PROBE4 <- subset(MWM, Probe == TRUE & day_cat == 4 & trial_num == 7) %>% group_by( Age.months., Strain) %>%
summarize( sum_allocentric = sum(is_allocentric), sum_escape = sum(is_escape), sum_goal_crossings = sum(goal.crossings),
mn_CIPL = mean(CIPL_Scores))
MWM_DAY_COMBINE_MICE_PROBE6 <- subset(MWM, Probe == TRUE & day_cat == 6 & trial_num == 7) %>% group_by( Age.months., Strain) %>%
summarize( sum_allocentric = sum(is_allocentric), sum_escape = sum(is_escape),sum_goal_crossings = sum(goal.crossings),mn_CIPL = mean(CIPL_Scores))
# General approach to stats:
# If there is a main effect, then it is legit to do post hoc. If no main effect, no post hoc.
# CIPL: For sure in paper
plot_MWM1(MWM_DAY1to6_allT,MWM_DAY1to6_allT$mn_CIPL,'CIPL', 'Days 1-6' )
ggsave(paste0(save_dir,"CIPLd1to4.svg"), device = "svg", width = 8, height = 4, units = "in")
# Stats for days 1-4 only.
MWM_stats_1to4(MWM_DAY1to4_allT,'mn_CIPL')
plot_MWM1(MWM_DAY1to6_allT,MWM_DAY1to6_allT$mn_TIG,'TIG', 'Days 1-6' )
plot_MWM1(MWM_DAY1to6_allT,MWM_DAY1to6_allT$mn_TIN,'TIN', 'Days 1-6' )
plot_MWM1(MWM_DAY1to6_allT,MWM_DAY1to6_allT$mn_TIG,'TIG %', 'Days 1-6' )
ggsave(paste0(save_dir,"Time_in_goal_perc_d1to6.svg"), device = "svg", width = 8, height = 4, units = "in")
plot_MWM1(MWM_DAY1to6_allT,MWM_DAY1to6_allT$mn_TIG,'Time in Goal %', 'Days 1-6' )
ggsave(paste0(save_dir,"Time_in_goal_perc_d1to6.svg"), device = "svg", width = 8, height = 4, units = "in")
MWM_stats_1to4(MWM_DAY1to4_allT,'mn_TIG')
MWM_stats_1to4(MWM_DAY1to4_allT,'mn_TIG')
MWM_stats_1to4(MWM_DAY1to4_allT,'mn_TIG')
MWM_stats_1to4 <- function(TBL,vbl){
#vbl = 'mn_CIPL'
months = sort(unique(TBL$Age.months.))
for(iMonth in months){
print('----------')
print(paste('MONTH: ' , iMonth))
print('----------')
df = subset(TBL, Age.months. == iMonth)
mod_str = as.formula(paste(vbl,'~ Strain * day_cat + Error(animalID/(Strain * day_cat))'))
mod <- aov(mod_str,data = df )
print(mod_str)
print(summary(mod))
print(eta_squared( mod))
mod_str2 = as.formula(paste(vbl,'~ Strain '))
dfd = subset(TBL, Age.months. == iMonth & day_cat == 3)
print('')
print(paste('ttest d3 pbonf =', t.test(mod_str2,dfd)$p.value*2))
dfd = subset(TBL, Age.months. == iMonth & day_cat == 4)
print(paste('ttest d4 pbonf =', t.test(mod_str2,dfd)$p.value*2))
}
}
MWM_stats_1to4(MWM_DAY1to4_allT,'mn_TIG')
#titstr = 'trials56'
#TMP <- subset(MWM, trial_num > 4 & trial_num < 7) # do this if you only want to compute performance based on the last trials. Ignore the few trial 7 as these are probe trials.
#titstr = 'trials12'
#TMP <- subset(MWM, trial_num < 3)  # do this if you only want to compute performance based on the first 2 trials.
#titstr = 'trial 1'
#TMP <- subset(MWM, trial_num == 1)  # do this if you only want to compute performance based on the first 2 trials.
#titstr = 'trial7' # This is for analyzing the probe trial only.
#TMP <- subset(MWM, trial_num == 7)  # do this if you only want to compute performance based on the first 2 trials.
group_MWM_by_day <- function(TBL){
MWM_DAY <- TBL %>% group_by(animalID, Age.months., day_cat, Strain) %>%
summarize(mn_thig = mean(is_thigmotaxis), mn_circ = mean(is_circling) , mn_rnd = mean(is_random_path) ,
mn_scan = mean(is_scanning) , mn_chain = mean(is_chaining) , mn_direct = mean(is_directed_search) ,
mn_cor_path = mean(is_corrected_path ), mn_dir_path = mean(is_direct_path), mn_persev = mean(is_perseverance),
mn_thig_c = mean(thig_conf), mn_circ_c = mean(circ_conf) , mn_rnd_c = mean(rand_conf) ,
mn_scan_c = mean(scan_conf) , mn_chain_c = mean(chain_conf) , mn_direct_c = mean(dir_search_conf) ,
mn_cor_path_c = mean(correc_conf ), mn_dir_path_c = mean(dir_path_conf), mn_persev_c = mean(persev_conf),
mn_allocentric_conf  = mean(allocentric_conf ), mn_escape_conf  = mean(escape_conf ),
mn_CIPL = mean(CIPL_Scores), mn_allocentric = mean(is_allocentric), sum_allocentric = sum(is_allocentric), mn_escape = mean(is_escape),
mn_TIE =  mean(time.in.e.quadrant.norm), mn_TIW = mean(time.in.w.quadrant.norm),mn_TIN = mean(time.in.n.quadrant.norm),
mn_TIS = mean(time.in.s.quadrant.norm), mn_TIG = mean(time.in.goal.zone.norm),mn_TSmN = mean(time.in.s.minus.n.norm), mn_latency = mean(latency.to.goal),
sm_goal_cross = sum(goal.crossings), mn_goal_cross = mean(goal.crossings), mn_entropy = mean(entropy_strat) )
MWM_DAY$animalID <- factor(MWM_DAY$animalID) # gets rid of empty factors
MWM_DAY$day_cat <- factor(MWM_DAY$day_cat) # gets rid of empty factors
MWM_DAY$Strain <- factor(MWM_DAY$Strain) # gets rid of empty factors
MWM_DAY
}
MWM_DAY1to6_allT <- group_MWM_by_day(subset(MWM,trial_num < 7 & X_Day < 7)) # titstr = 'days1to4 alltrials'
MWM_DAY1to4_allT <- group_MWM_by_day(subset(MWM,trial_num < 7 & X_Day < 5)) # titstr = 'days1to4 alltrials'
MWM_DAY1to4_T12 <- group_MWM_by_day(subset(MWM,trial_num < 3 & X_Day < 5)) # titstr = 'days1to4 alltrials'
MWM_DAY1to4_T56 <- group_MWM_by_day(subset(MWM,trial_num > 4 & trial_num < 7 & X_Day < 5)) # titstr = 'days1to4 alltrials'
MWM_DAY4_Probe <- group_MWM_by_day(subset(MWM, Probe == TRUE & day_cat == 4 & trial_num == 7))
MWM_DAY6_Probe <- group_MWM_by_day(subset(MWM, Probe == TRUE & day_cat == 6 & trial_num == 7))
MWM_DAY56_allT <- group_MWM_by_day(subset(MWM,trial_num < 7 & X_Day > 4 & X_Day < 7 ))
# CIPL: For sure in paper
plot_MWM1(MWM_DAY1to6_allT,MWM_DAY1to6_allT$mn_CIPL,'CIPL', 'Days 1-6' )
ggsave(paste0(save_dir,"CIPLd1to6.svg"), device = "svg", width = 8, height = 4, units = "in")
# Stats for days 1-4 only.
MWM_stats_1to4(MWM_DAY1to4_allT,'mn_CIPL')
# Mean allocentric: For sure in paper
plot_MWM1(MWM_DAY1to4_allT,MWM_DAY1to4_allT$mn_allocentric_conf,'mn_allocentric_conf', titstr )
# Mean allocentric: For sure in paper
plot_MWM1(MWM_DAY1to4_allT,MWM_DAY1to4_allT$mn_allocentric_conf,'mn_allocentric_conf', titstr )
ggsave(paste0(save_dir,"AlloProb_d1to4.svg"), device = "svg", width = 8, height = 4, units = "in")
MWM_stats_1to4(MWM_DAY1to4_allT,'mn_allocentric_conf')
MWM_stats_1to4(MWM_DAY1to4_allT,'mn_allocentric_conf')
# mn_entropy ~ Strain * day_cat + Error(animalID/(Strain * day_cat))
plot_MWM1(MWM_DAY1to6_allT,MWM_DAY1to6_allT$mn_entropy,'Entropy', titstr )
MWM_stats_1to4(MWM_DAY1to6_allT,'mn_entropy')
ggsave(paste0(save_dir,"Entropy.svg"), device = "svg", width = 8, height = 4, units = "in")
plot_MWM1(MWM_DAY4_Probe,MWM_DAY4_Probe$sm_goal_cross,'goal crosses','Goal cross day 4 probe' )
ggsave(paste0(save_dir,"GOAL CROSSINGS DAY 4 PROBE.svg"), device = "svg", width = 6, height = 3, units = "in")
plot_MWM1(MWM_DAY6_Probe,MWM_DAY6_Probe$sm_goal_cross,'goal crosses','Goal cross day 6 probe' )
ggsave(paste0(save_dir,"GOAL CROSSINGS DAY 6 PROBE.svg"), device = "svg", width = 3, height = 3, units = "in")
dfd = subset(MWM_DAY4_Probe, Age.months. == 9)
print('')
print(paste('ttest d3 pbonf =', t.test('sm_goal_cross~Strain',dfd)$p.value*2))
MWM_DAY4_Probe
dfd = subset(MWM_DAY4_Probe, Age.months. == 9)
dfd
print(paste('ttest d3 pbonf =', t.test('sm_goal_cross~Strain',data = dfd)$p.value*2))
?t.test
dfd$sm_goal_cross
dfd$Strain
t.test('sm_goal_cross~Strain',data = dfd)
dfd$sm_goal_cross = as.numeric(dfd$sm_goal_cross )
print('')
print(paste('ttest d3 pbonf =', t.test('sm_goal_cross~Strain',data = dfd)$p.value*2))
t.test(sm_goal_cross~Strain,data = dfd)
dfd$sm_goal_cross = as.numeric(dfd$sm_goal_cross )
print('')
print(paste('ttest d3 pbonf =', t.test(sm_goal_cross~Strain,data = dfd)$p.value))
print(paste('ttest pbonf =', t.test(sm_goal_cross~Strain,data = subset(MWM_DAY4_Probe, Age.months. == 9))$p.value))
t.test(sm_goal_cross~Strain,data = dfd)Age.months.
Age.months.
unique(dfd$Age.months.)
unique(MWM$Age.months.)
print(paste('ttest pbonf =', t.test(sm_goal_cross~Strain,data = subset(MWM_DAY4_Probe, Age.months. == 2))$p.value))
print(paste('ttest pbonf =', t.test(sm_goal_cross~Strain,data = subset(MWM_DAY4_Probe, Age.months. == 6))$p.value))
print(paste('ttest pbonf =', t.test(sm_goal_cross~Strain,data = subset(MWM_DAY4_Probe, Age.months. == 9))$p.value))
print(paste('ttest pbonf =', t.test(sm_goal_cross~Strain,data = subset(MWM_DAY4_Probe, Age.months. == 14))$p.value))
0.00479385* 4
plot_MWM1(MWM_DAY4_Probe,MWM_DAY4_Probe$sm_goal_cross,'goal crosses','Goal cross day 4 probe' )
# Mean allocentric: For sure in paper
plot_MWM1(MWM_DAY1to6_allT,MWM_DAY1to6_allT$mn_allocentric_conf,'mn_allocentric_conf', titstr )
ggsave(paste0(save_dir,"AlloProb_d1to6.svg"), device = "svg", width = 8, height = 4, units = "in")
MWM_stats_1to4(MWM_DAY1to4_allT,'mn_allocentric_conf')
###########################################################
# Does OVX impact water maze performance?
#
# TODO:
# How are the probe trials assessed - should it not be the number of traversals over the target?
# Generate statistics
# Konsolaki uses a Box-Cox transform (EM) to make data normal -seems overkill, but should look into. in MASS, called boxcox()
#
# Include the probability for each strategy. This is in the 'confidence' value.
# TODO: Add time_in_goal to the original MWM table and plot for all days instead of 1-4 and 5-6 separately.
#
# There are a tone of NAs in latency to goal - why? > 60? I think latency is not somethign we can analyze - it's not calculated completely.
###########################################################
# Cowen - 2025 based on Gabriel's curation of the main data table.
###########################################################
rm(list = ls()) # this clears variables in case any are already loaded.
library(rempsyc)
library(heplots)
library(lsr)
library(dplyr)
library(tidyverse)
library(ggthemes)
library(ggsignif)
library(effectsize)
# library(rstatix)
# library(stringr)
# install.packages('datarium')
# library(lme4)
# library(lmerTest)
#library(ggnewscale)
theme_set(theme_classic(base_size = 16))
#theme_set(theme_minimal(base_size = 16))
custom_colors <- c(INTACT = "#000000",OVX = "#9f044d")
custom_colors2 <- c("#000000","#9f044d")
marker_color <- "#b5b2b3"
#marker_color <- "white"
user= Sys.getenv("USERNAME")
data_dir = paste0('C:/Users/',user,'/Documents/GitHub/Ovariectomy_and_development/MWM/')
code_dir = paste0('C:/Users/',user,'/Documents/GitHub/Ovariectomy_and_development/MWM/R_cowen/')
setwd(code_dir)
save_dir = 'C:/Temp/'
# Load the data...
source(paste0(code_dir,'Load_MWM_Data.R'))
# Define the plot functions.
plot_MWM1 <- function(TBL,vbl,ylab_txt, titstr){
# Assumes that all 6 days are plotted.
ggplot(TBL, aes( x = TBL$day_cat, y= vbl,  colour = TBL$Strain, shape =TBL$Strain)) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = .8, size = 1.4, position = position_dodge(width=0.9)) +
scale_color_manual(values = custom_colors) +
scale_shape_manual(values = c(21,22)) +
geom_point(position = position_jitterdodge(jitter.width = 0.3, dodge.width = 0.9), size = 1.4, alpha = 0.25, stroke = 1) +
facet_wrap(~TBL$Age.months., nrow = 1) +
ylab(ylab_txt) + xlab('Day') +
theme(legend.position="none") + # , strip.background = element_blank() to get rid of the box around the headers.
#geom_signif(comparisons = list(c("INTACT", "OVX")), map_signif_level=TRUE, test = 't.test')+
ggtitle(titstr)
}
MWM_stats_1to4 <- function(TBL,vbl){
#vbl = 'mn_CIPL'
months = sort(unique(TBL$Age.months.))
for(iMonth in months){
print('----------')
print(paste('MONTH: ' , iMonth))
print('----------')
df = subset(TBL, Age.months. == iMonth)
mod_str = as.formula(paste(vbl,'~ Strain * day_cat + Error(animalID/(Strain * day_cat))'))
mod <- aov(mod_str,data = df )
print(mod_str)
print(summary(mod))
print(eta_squared( mod))
mod_str2 = as.formula(paste(vbl,'~ Strain '))
dfd = subset(TBL, Age.months. == iMonth & day_cat == 3)
print('')
print(paste('ttest d3 pbonf =', t.test(mod_str2,dfd)$p.value*2))
dfd = subset(TBL, Age.months. == iMonth & day_cat == 4)
print(paste('ttest d4 pbonf =', t.test(mod_str2,dfd)$p.value*2))
}
}
MWM_stats_5 <- function(TBL,vbl){
#vbl = 'mn_CIPL'
months = sort(unique(TBL$Age.months.))
for(iMonth in months){
print('----------')
print(paste('t-test DAY 5 ONLY MONTH: ' , iMonth))
print('----------')
df = subset(TBL, Age.months. == iMonth)
mod_str = as.formula(paste(vbl,'~ Strain'))
print(t.test(mod_str,data= df))
}
}
plot_MWM_box <- function(TBL,vbl,ylab_txt, titstr){
#ggplot(MWM_DAY, aes( x = day_cat, y= mn_TSmN, fill =  Strain, colour = Strain)) + geom_boxplot(position = position_dodge(width = 0.9)) +
#  geom_point(position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.9), size = 1.8, alpha = .7 ) +
#  facet_wrap(~Age.months.) + scale_fill_manual(values = custom_colors) + scale_color_manual(values = c(marker_color, marker_color)) +
#  ggtitle(titstr)
ggplot(TBL, aes( x = TBL$day_cat, y= vbl,  colour = TBL$Strain, shape =TBL$Strain, fill =TBL$Strain)) +
geom_boxplot(position = position_dodge(width = 0.9)) +
geom_point(position = position_jitterdodge(jitter.width = 0.22, dodge.width = 0.9), size = 2.2, alpha = 0.65, stroke = 1) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = .4, size = 1.8, position = position_dodge(width=0.9)) +
scale_color_manual(values = c(marker_color, marker_color)) +
scale_shape_manual(values = c(21,22)) +
scale_fill_manual(values = custom_colors) +
facet_wrap(~TBL$Age.months.) +
ylab(ylab_txt) +
theme(legend.position="none")+
ggtitle(titstr)
}
plot_MWM_violin <- function(TBL,vbl,ylab_txt, titstr){
ggplot(TBL, aes( x = TBL$day_cat, y= vbl,  colour = TBL$Strain, shape =TBL$Strain)) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = .8, size = 1.8, position = position_dodge(width=0.9)) +
scale_color_manual(values = custom_colors) +scale_shape_manual(values = c(21,22)) + geom_violin() +
geom_point(position = position_jitterdodge(jitter.width = 0.3, dodge.width = 0.9), size = 2.2, alpha = 0.65, stroke = 1) +
facet_wrap(~TBL$Age.months.) + ylab(ylab_txt) +
theme(legend.position="none")+
ggtitle(titstr)
}
# NOTE
# 9 mo are the only ones that had both probes.
# ("24" = Trial before probe, "25" Probe trial, "37" Trial before probe after reversal, "38" last probe after removing platform))
ggplot(MWM) + aes( x = day_cat, y= CIPL_Scores, fill = Strain, color=Strain) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = .8, size = 2.5,position = position_dodge(width=0.9)) +
scale_fill_manual(values = custom_colors) + scale_color_manual(values = custom_colors)  +
geom_point(position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.9),shape=21, size= 1.5, alpha = 0.8) +
scale_fill_manual(values = c('white', 'white'))+
facet_wrap(~Age.months.)  +
theme(legend.position="none")+
ggtitle('All Trails (trial treated as the subj.)')
ggplot(MWM) + aes( x = day_cat, y= entropy_strat, fill = Strain, color=Strain) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = .8, size = 2.5,position = position_dodge(width=0.9)) +
scale_fill_manual(values = custom_colors) + scale_color_manual(values = custom_colors)  +
geom_point(position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.9),shape=21, size= 1.5, alpha = 0.8) +
scale_fill_manual(values = c('white', 'white'))+
facet_wrap(~Age.months.)  +
theme(legend.position="none")+
ggtitle('All Trails (trial treated as the subj.)')
ggplot(MWM) + aes( x = day_cat, y= CIPL_Scores, fill = Strain, color=Strain) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = .8, size = 2.5,position = position_dodge(width=0.9)) +
scale_fill_manual(values = custom_colors) + scale_color_manual(values = custom_colors)  +
geom_dotplot(position = position_dodge(width=0.9),
binaxis='y',
stackdir='center',
dotsize = .5) +
scale_fill_manual(values = c('white', 'white'))+
facet_wrap(~Age.months.)  +
theme(legend.position="none")+
ggtitle('All Trails (trial treated as the subj.)')
ggplot(MWM, aes( x = day_cat, y= CIPL_Scores , fill =  Strain, colour = Strain)) + geom_boxplot(position = position_dodge(width = 0.9)) +
scale_fill_manual(values = custom_colors) +
geom_point(position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.9), size = 1.8, alpha = 0.8 ) +
facet_wrap(~Age.months.) + scale_color_manual(values = c(marker_color, marker_color)) +
ggtitle('All Trails (trial treated as the subj.)')
ggplot(MWM, aes( x = day_cat, y= goal.crossings , fill =  Strain, colour = Strain)) + geom_boxplot(position = position_dodge(width = 0.9)) +
geom_point(position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.9), size = 1.8, alpha = .7 ) +
facet_wrap(~Age.months.) + scale_fill_manual(values = custom_colors) + scale_color_manual(values = c(marker_color, marker_color)) +
ggtitle('All Trails (trial treated as the subj.)')
ggplot(subset(MWM,trial_num ==1), aes( x = day_cat, y= CIPL_Scores , fill =  Strain, colour = Strain)) + geom_boxplot(position = position_dodge(width = 0.9)) +
geom_point(position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.9), size = 1.8, alpha = .7 ) +
facet_wrap(~Age.months.) + scale_fill_manual(values = custom_colors) + scale_color_manual(values = c(marker_color, marker_color)) +
ggtitle('Trial 1 only (trial treated as the subj.)')
ggplot(MWM, aes( x = day_cat, y= latency.to.goal , fill =  Strain, colour = Strain)) + geom_boxplot(position = position_dodge(width = 0.9)) +
geom_point(position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.9), size = 1.8, alpha = .7 ) +
facet_wrap(~Age.months.) + scale_fill_manual(values = custom_colors) + scale_color_manual(values = c(marker_color, marker_color)) +
ggtitle('All Trails (trial treated as the subj.)')
#Main Table Setup. Goal is to group by day.
# This really does nothing right now other than alter variable names. for simplicity we should just stick with MWM.
#MWM_DAY <- MWM %>% group_by(Strain, animalID, Age.months., day_cat, Trial, time.in.s.quadrant, time.in.n.quadrant, time.in.w.quadrant, time.in.e.quadrant) %>% summarize(mn_thig = mean(is_thigmotaxis), mn_circ = mean(is_circling) , mn_rnd = mean(is_random_path) , mn_scan = mean(is_scanning) , mn_chain = mean(is_chaining) , mn_direct = mean(is_directed_search) , mn_cor_path = mean(is_corrected_path ), mn_dir_path = mean(is_direct_path), mn_persev = mean(is_perseverance), mn_CIPL = mean(CIPL_Scores))
# Do we want to just average across all trils in a day or just for the last few trials?
#NOTE: GraphTable01b <- MWM %>% group_by(Strain, animalID, Age.months., day_cat, Trial, Time_In_ASouthGoal_Quadrant, Time_In_RNorthGoal_Quadrant, Time_In_West_Quadrant, Time_In_East_Quadrant)
#titstr = 'alltrials'
#TMP <- subset(MWM,trial_num < 7) # do this if you only want to compute performance based on the last trials. Ignore the few trial 7 as these are probe trials.
titstr = 'days1to4 alltrials'
TMP <- subset(MWM,trial_num < 7 & X_Day < 5) # do this if you only want to compute performance based on the last trials. Ignore the few trial 7 as these are probe trials.
#titstr = 'trials56'
#TMP <- subset(MWM, trial_num > 4 & trial_num < 7) # do this if you only want to compute performance based on the last trials. Ignore the few trial 7 as these are probe trials.
#titstr = 'trials12'
#TMP <- subset(MWM, trial_num < 3)  # do this if you only want to compute performance based on the first 2 trials.
#titstr = 'trial 1'
#TMP <- subset(MWM, trial_num == 1)  # do this if you only want to compute performance based on the first 2 trials.
#titstr = 'trial7' # This is for analyzing the probe trial only.
#TMP <- subset(MWM, trial_num == 7)  # do this if you only want to compute performance based on the first 2 trials.
group_MWM_by_day <- function(TBL){
MWM_DAY <- TBL %>% group_by(animalID, Age.months., day_cat, Strain) %>%
summarize(mn_thig = mean(is_thigmotaxis), mn_circ = mean(is_circling) , mn_rnd = mean(is_random_path) ,
mn_scan = mean(is_scanning) , mn_chain = mean(is_chaining) , mn_direct = mean(is_directed_search) ,
mn_cor_path = mean(is_corrected_path ), mn_dir_path = mean(is_direct_path), mn_persev = mean(is_perseverance),
mn_thig_c = mean(thig_conf), mn_circ_c = mean(circ_conf) , mn_rnd_c = mean(rand_conf) ,
mn_scan_c = mean(scan_conf) , mn_chain_c = mean(chain_conf) , mn_direct_c = mean(dir_search_conf) ,
mn_cor_path_c = mean(correc_conf ), mn_dir_path_c = mean(dir_path_conf), mn_persev_c = mean(persev_conf),
mn_procedural_conf  = mean(procedural_conf ), mn_allocentric_conf  = mean(allocentric_conf ), mn_escape_conf  = mean(escape_conf ),
mn_CIPL = mean(CIPL_Scores), mn_allocentric = mean(is_allocentric), sum_allocentric = sum(is_allocentric), mn_escape = mean(is_escape),
mn_TIE =  mean(time.in.e.quadrant.norm), mn_TIW = mean(time.in.w.quadrant.norm),mn_TIN = mean(time.in.n.quadrant.norm),
mn_TIS = mean(time.in.s.quadrant.norm), mn_TIG = mean(time.in.goal.zone.norm),mn_TSmN = mean(time.in.s.minus.n.norm), mn_latency = mean(latency.to.goal),
sm_goal_cross = sum(goal.crossings), mn_goal_cross = mean(goal.crossings), mn_entropy = mean(entropy_strat) )
MWM_DAY$animalID <- factor(MWM_DAY$animalID) # gets rid of empty factors
MWM_DAY$day_cat <- factor(MWM_DAY$day_cat) # gets rid of empty factors
MWM_DAY$Strain <- factor(MWM_DAY$Strain) # gets rid of empty factors
MWM_DAY
}
MWM_DAY1to6_allT <- group_MWM_by_day(subset(MWM,trial_num < 7 & X_Day < 7)) # titstr = 'days1to4 alltrials'
MWM_DAY1to4_allT <- group_MWM_by_day(subset(MWM,trial_num < 7 & X_Day < 5)) # titstr = 'days1to4 alltrials'
MWM_DAY1to4_T12 <- group_MWM_by_day(subset(MWM,trial_num < 3 & X_Day < 5)) # titstr = 'days1to4 alltrials'
MWM_DAY1to4_T56 <- group_MWM_by_day(subset(MWM,trial_num > 4 & trial_num < 7 & X_Day < 5)) # titstr = 'days1to4 alltrials'
MWM_DAY4_allT_long <- subset(MWM_DAY1to4_allT,day_cat == 4) %>% pivot_longer( cols = "mn_thig_c":"mn_persev_c",
names_to = "strategy_c",
values_to = "conf")
MWM_DAY4_allT_long$strategy_c = factor(MWM_DAY4_allT_long$strategy_c)
MWM_DAY4_allT_long$strategy_c <- factor(MWM_DAY4_allT_long$strategy_c, levels=c('mn_thig_c', 'mn_circ_c', 'mn_rnd_c', 'mn_scan_c', 'mn_chain_c', 'mn_direct_c', 'mn_cor_path_c', 'mn_dir_path_c', 'mn_persev_c'))
MWM_DAY4_allT_long2 <- subset(MWM_DAY1to4_allT,day_cat == 4) %>% pivot_longer( cols = c("mn_allocentric_conf", "mn_procedural_conf","mn_escape_conf"),
names_to = "strategy_c",
values_to = "conf")
MWM_DAY4_allT_long2$strategy_c = factor(MWM_DAY4_allT_long2$strategy_c)
MWM_DAY4_allT_long2$strategy_c <- factor(MWM_DAY4_allT_long2$strategy_c, levels=c('mn_escape_conf', 'mn_procedural_conf', 'mn_allocentric_conf'))
MWM_DAY4_Probe <- group_MWM_by_day(subset(MWM, Probe == TRUE & day_cat == 4 & trial_num == 7))
MWM_DAY6_Probe <- group_MWM_by_day(subset(MWM, Probe == TRUE & day_cat == 6 & trial_num == 7))
MWM_DAY56_allT <- group_MWM_by_day(subset(MWM,trial_num < 7 & X_Day > 4 & X_Day < 7 ))
MWM_DAY5_allT <- group_MWM_by_day(subset(MWM,trial_num < 7 & day_cat == 5 ))
MWM_DAY_COMBINE_MICE <- subset(MWM,trial_num < 7 & X_Day < 5) %>% group_by( Age.months., day_cat, Strain) %>%
summarize( sum_allocentric = sum(is_allocentric), sum_escape = sum(is_escape))
MWM_DAY_COMBINE_MICE_PROBE4 <- subset(MWM, Probe == TRUE & day_cat == 4 & trial_num == 7) %>% group_by( Age.months., Strain) %>%
summarize( sum_allocentric = sum(is_allocentric), sum_escape = sum(is_escape), sum_goal_crossings = sum(goal.crossings),
mn_CIPL = mean(CIPL_Scores))
MWM_DAY_COMBINE_MICE_PROBE6 <- subset(MWM, Probe == TRUE & day_cat == 6 & trial_num == 7) %>% group_by( Age.months., Strain) %>%
summarize( sum_allocentric = sum(is_allocentric), sum_escape = sum(is_escape),sum_goal_crossings = sum(goal.crossings),mn_CIPL = mean(CIPL_Scores))
# CIPL: For sure in paper
plot_MWM1(MWM_DAY1to6_allT,MWM_DAY1to6_allT$mn_CIPL,'CIPL', 'Days 1-6' )
ggsave(paste0(save_dir,"CIPLd1to6.svg"), device = "svg", width = 8, height = 4, units = "in")
# Stats for days 1-4 only.
MWM_stats_1to4(MWM_DAY1to4_allT,'mn_CIPL')
plot_MWM1(MWM_DAY1to6_allT,MWM_DAY1to6_allT$mn_TIG,'Time in Goal %', 'Days 1-6' )
ggsave(paste0(save_dir,"Time_in_goal_perc_d1to6.svg"), device = "svg", width = 8, height = 4, units = "in")
MWM_stats_1to4(MWM_DAY1to4_allT,'mn_TIG')
# Mean allocentric: For sure in paper
plot_MWM1(MWM_DAY1to6_allT,MWM_DAY1to6_allT$mn_allocentric_conf,'mn_allocentric_conf', titstr )
ggsave(paste0(save_dir,"AlloProb_d1to6.svg"), device = "svg", width = 8, height = 4, units = "in")
MWM_stats_1to4(MWM_DAY1to4_allT,'mn_allocentric_conf')
# Look at the reversal day - 5.
MWM_stats_5(MWM_DAY5_allT,'mn_allocentric_conf')
#plot_MWM1(MWM_DAY1to4_allT,MWM_DAY1to4_allT$mn_dir_path_c,'mn_dir_path_c', titstr )
#plot_MWM1(MWM_DAY1to4_allT,MWM_DAY1to4_allT$mn_direct_c,'mn_direct_c', titstr )
#plot_MWM1(MWM_DAY1to4_allT,MWM_DAY1to4_allT$mn_cor_path_c,'mn_cor_path_c', titstr )\
# Mean escape: not really necessary.
plot_MWM1(MWM_DAY1to4_allT,MWM_DAY1to4_allT$mn_escape_conf,'mn_escape_conf', titstr )
MWM_stats_1to4(MWM_DAY1to4_allT,'mn_escape_conf')
# mn_entropy ~ Strain * day_cat + Error(animalID/(Strain * day_cat))
plot_MWM1(MWM_DAY1to6_allT,MWM_DAY1to6_allT$mn_entropy,'Entropy', titstr )
MWM_stats_1to4(MWM_DAY1to4_allT,'mn_entropy')
ggsave(paste0(save_dir,"Entropy.svg"), device = "svg", width = 8, height = 4, units = "in")
# MWM_DAY1to4_T56 and T12 - effect there but also when all trials so not much added with just focusing on the last trials or the first trials
plot_MWM1(MWM_DAY1to4_T12,MWM_DAY1to4_T12$mn_CIPL,'CIPL', 'trials 1 and 2' )
plot_MWM1(MWM_DAY1to4_T56,MWM_DAY1to4_T56$mn_CIPL,'CIPL', 'trials 5 and 6' )
plot_MWM1(MWM_DAY4_Probe,MWM_DAY4_Probe$sm_goal_cross,'goal crosses','Goal cross day 4 probe' )
ggsave(paste0(save_dir,"GOAL CROSSINGS DAY 4 PROBE.svg"), device = "svg", width = 6, height = 3, units = "in")
print(paste('ttest pbonf =', t.test(sm_goal_cross~Strain,data = subset(MWM_DAY4_Probe, Age.months. == 2))$p.value))
print(paste('ttest pbonf =', t.test(sm_goal_cross~Strain,data = subset(MWM_DAY4_Probe, Age.months. == 6))$p.value))
print(paste('ttest pbonf =', t.test(sm_goal_cross~Strain,data = subset(MWM_DAY4_Probe, Age.months. == 9))$p.value))
print(paste('ttest pbonf =', t.test(sm_goal_cross~Strain,data = subset(MWM_DAY4_Probe, Age.months. == 14))$p.value))
t.test(sm_goal_cross~Strain,data = subset(MWM_DAY4_Probe, Age.months. == 9))
dfd = subset(TBL, Age.months. == iMonth & day_cat == 4)
print(paste('ttest d4 pbonf =', t.test(mod_str2,dfd)$p.value*2))
plot_MWM1(MWM_DAY6_Probe,MWM_DAY6_Probe$sm_goal_cross,'goal crosses','Goal cross day 6 probe' )
ggsave(paste0(save_dir,"GOAL CROSSINGS DAY 6 PROBE.svg"), device = "svg", width = 3, height = 3, units = "in")
# FIGURE 1: One graph of ONLY age for the wild type INTACT
MWM_INTACT <- subset(MWM_DAY1to4_allT, Strain == 'INTACT')
plot_MWM1(MWM_INTACT,MWM_INTACT$mn_CIPL,'mn_CIPL',paste(titstr, ' INTACT only') )
ggsave(paste0(save_dir,"INTACT ONLYd1to4.svg"), device = "svg", width = 4, height = 5, units = "in")
MWM_INTACT <- subset(MWM_DAY56_allT, Strain == 'INTACT')
plot_MWM1(MWM_INTACT,MWM_INTACT$mn_CIPL,'mn_CIPL','d56 INTACT only' )
ggsave(paste0(save_dir,"INTACT ONLYd56.svg"), device = "svg", width = 4, height = 5, units = "in")
MWM_INTACT <- subset(MWM_DAY1to6_allT, Strain == 'INTACT')
plot_MWM1(MWM_INTACT,MWM_INTACT$mn_CIPL,'mn_CIPL','INTACT only' )
ggsave(paste0(save_dir,"INTACT ALL DAYS.svg"), device = "svg", width = 4, height = 5, units = "in")
# Eacn individual strategy on day 4 to look for individual differences.
TBL = subset(MWM_DAY4_allT_long,Age.months. ==9)
ggplot(TBL, aes( x = conf, y= strategy_c, colour = Strain, shape =Strain)) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = .8, size = 1.4, position = position_dodge(width=0.9)) +
scale_color_manual(values = custom_colors) +
scale_shape_manual(values = c(21,22)) +
geom_point(position = position_jitterdodge(jitter.width = 0.3, dodge.width = 0.9), size = 1.4, alpha = 0.25, stroke = 1) +
theme(legend.position="none") + # , strip.background = element_blank() to get rid of the box around the headers.
ggtitle('Day 4, 9mo, individual strategies')
ggsave(paste0(save_dir,"Day4_9mo_all_strategies.svg"), device = "svg", width = 5, height = 6, units = "in")
pt = data.frame()
for(strat in levels(TBL$strategy_c)){
print(paste('t-test DAY 4, 9mo ' , strat))
df = subset(TBL, strategy_c == strat)
x = df[df$Strain == 'INTACT','conf']
y = df[df$Strain == 'OVX','conf']
m = t.test(x,y);
v = nrow(pt) + 1
pt[v,'strat'] = strat
pt[v,'p'] = m$p.value
pt[v,'t'] = m$statistic
pt[v,'df'] = m$parameter
}
print(pt)
p.adjust(pt$p,'holm')
# meta strategy
TBL = subset(MWM_DAY4_allT_long2,Age.months. ==9)
ggplot(TBL, aes( x = conf, y= strategy_c, colour = Strain, shape =Strain)) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = .8, size = 1.4, position = position_dodge(width=0.9)) +
scale_color_manual(values = custom_colors) +
scale_shape_manual(values = c(21,22)) +
geom_point(position = position_jitterdodge(jitter.width = 0.3, dodge.width = 0.9), size = 1.4, alpha = 0.25, stroke = 1) +
theme(legend.position="none") + # , strip.background = element_blank() to get rid of the box around the headers.
ggtitle('Day 4, 9mo, Meta strategies')
